AWSTemplateFormatVersion: "2010-09-09"

Parameters: 
  OrgId:
    Type: String
  OrgUnitId:
    Type: String
  ToolAccountID:
    Type: String

Resources:
  ConfigRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:       # assumerole action does not allow principal : *, so we need to use one more parameter with tool account id...
              AWS: 
              - !Sub '${ToolAccountID}'
              - !Sub '${AWS::AccountId}'
            Action:
              - 'sts:AssumeRole'
          - Effect: Allow
            Principal:
              Service:
                - config.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /
     
#I had to come up with the policy below due to managed service role policies can't be attached to customer roles...
  CustomAWSConfigPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: CustomAWSConfigPolicy
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
              - 'logs:CreateLogStream'
              - 'logs:CreateLogGroup'
            Resource: 'arn:aws:logs:*:*:log-group:/aws/config/*'
            
          - Effect: Allow
            Action: 'logs:PutLogEvents'
            Resource: 'arn:aws:logs:*:*:log-group:/aws/config/*:log-stream:config-rule-evaluation/*'

          - Effect: Allow
            Action: 'sns:Publish'
            Resource: 
              !Sub 'arn:aws:sns:us-east-1:${AWS::AccountId}:Config-Delivery-SNS-Topic'
        
          - Effect: Allow
            Action:
              - 'access-analyzer:Get*'
              - 'access-analyzer:List*'
              - 'account:GetAlternateContact'
              - 'acm-pca:DescribeCertificateAuthority'
              - 'acm-pca:GetCertificateAuthorityCsr'
              - 'acm-pca:List*'
              - 'acm:DescribeCertificate'
              - 'acm:ListCertificates'
              - 'acm:List*'
              - 'airflow:GetEnvironment'
              - 'airflow:ListEnvironments'
              - 'amplifyuibuilder:ExportThemes'
              - 'amplifyuibuilder:GetTheme'
              - 'amplifyuibuilder:ListThemes'
              - 'apigateway:Get'
              - 'appconfig:Get*'
              - 'appconfig:List*'
              - 'appflow:DescribeConnectorProfiles'
              - 'application-autoscaling:Describe*'
              - 'appsync:Get*'
              - 'appsync:ListGraphqlApis'
              - 'athena:Get*'
              - 'athena:List*'
              - 'autoscaling-plans:Describe*'
              - 'autoscaling-plans:GetScalingPlanResourceForecastData'
              - 'autoscaling:Describe*'
              - 'backup-gateway:List*'
              - 'backup:Describe*'
              - 'backup:Get*'
              - 'backup:List*'
              - 'batch:Describe*'
              - 'batch:ListTagsForResource'
              - 'billingconductor:List*'
              - 'budgets:Describe*'
              - 'budgets:ViewBudget'
              - 'cassandra:Select'
              - 'ce:Get*'
              - 'cloud9:Describe*'
              - 'cloud9:List*'
              - 'cloudformation:DescribeType'
              - 'cloudformation:GetResource'
              - 'cloudformation:List*'
              - 'cloudfront:List*'
              - 'cloudtrail:DescribeTrails'
              - 'cloudtrail:Get*'
              - 'cloudtrail:List*'
              - 'cloudwatch:Describe*'
              - 'cloudwatch:Get*'
              - 'cloudwatch:List*'
              - 'codedeploy:GetDeploymentConfig'
              - 'codepipeline:Get*'
              - 'codepipeline:ListPipelines'
              - 'config:BatchGet*'
              - 'config:Describe*'
              - 'config:Get*'
              - 'config:List*'
              - 'config:Put*'
              - 'config:Select*'
              - 'connect:DescribePhoneNumber'
              - 'connect:List*'
              - 'connect:SearchAvailablePhoneNumbers'
              - 'databrew:Describe*'
              - 'databrew:List*'
              - 'datasync:Describe*'
              - 'datasync:List*'
              - 'dax:Describe*'
              - 'dax:ListTags'
              - 'detective:List*'
              - 'devops-guru:GetResourceCollection'
              - 'dms:Describe*'
              - 'dms:ListTagsForResource'
              - 'ds:DescribeDirectories'
              - 'dynamodb:Describe*'
              - 'dynamodb:ListTables'
              - 'dynamodb:List*'
              - 'ec2:Describe*'
              - 'ec2:Get*'
              - 'ecr-public:DescribeRepositories'
              - 'ecr-public:Get*'
              - 'ecr-public:ListTagsForResource'
              - 'ecr:Describe*'
              - 'ecr:Get*'
              - 'ecr:ListTagsForResource'
              - 'ecs:Describe*'
              - 'ecs:List*'
              - 'eks:Describe*'
              - 'eks:List*'
              - 'elasticache:Describe*'
              - 'elasticache:ListTagsForResource'
              - 'elasticbeanstalk:Describe*'
              - 'elasticfilesystem:Describe*'
              - 'elasticloadbalancing:Describe*'
              - 'elasticmapreduce:Describe*'
              - 'elasticmapreduce:Get*'
              - 'elasticmapreduce:List*'
              - 'es:Describe*'
              - 'es:Get*'
              - 'es:List*'
              - 'events:Describe*'
              - 'events:List*'
              - 'finspace:GetEnvironment'
              - 'finspace:ListEnvironments'
              - 'firehose:DescribeDeliveryStream'
              - 'firehose:List*'
              - 'fis:GetExperimentTemplate'
              - 'fis:ListExperimentTemplates'
              - 'fms:Get*'
              - 'fms:List*'
              - 'frauddetector:Get*'
              - 'frauddetector:ListTagsForResource'
              - 'fsx:Describe*'
              - 'fsx:ListTagsForResource'
              - 'gamelift:Describe*'
              - 'gamelift:List*'
              - 'geo:Describe*'
              - 'geo:List*'
              - 'globalaccelerator:Describe*'
              - 'globalaccelerator:List*'
              - 'glue:Batch*'
              - 'glue:Get*'
              - 'glue:List*'
              - 'guardduty:Get*'
              - 'guardduty:List*'
              - 'iam:GenerateCredentialReport'
              - 'iam:Get*'
              - 'iam:List*'
              - 'imagebuilder:Get*'
              - 'imagebuilder:List*'
              - 'iot:Describe*'
              - 'iot:Get*'
              - 'iot:List*'
              - 'iot:ValidateSecurityProfileBehaviors'
              - 'iotanalytics:Describe*'
              - 'iotanalytics:List*'
              - 'iotevents:Describe*'
              - 'iotevents:List*'
              - 'iotsitewise:Describe*'
              - 'iotsitewise:List*'
              - 'iottwinmaker:Get*'
              - 'iottwinmaker:List*'
              - 'iotwireless:Get*'
              - 'iotwireless:List*'
              - 'ivs:Get*'
              - 'ivs:List*'
              - 'kafka:Describe*'
              - 'kafka:List*'
              - 'kinesis:Describe*'
              - 'kinesis:List*'
              - 'kinesisanalytics:DescribeApplication'
              - 'kinesisanalytics:List*'
              - 'kms:DescribeKey'
              - 'kms:Get*'
              - 'kms:List*'
              - 'lakeformation:DescribeResource'
              - 'lakeformation:GetDataLakeSettings'
              - 'lakeformation:List*'
              - 'lambda:Get*'
              - 'lambda:List*'
              - 'lex:Describe*'
              - 'lex:List*'
              - 'license-manager:Get*'
              - 'license-manager:List*'
              - 'lightsail:Get*'
              - 'logs:DescribeLogGroups'
              - 'logs:ListTagsLogGroup'
              - 'lookoutequipment:DescribeInferenceScheduler'
              - 'lookoutequipment:ListTagsForResource'
              - 'lookoutmetrics:Describe*'
              - 'lookoutmetrics:List*'
              - 'lookoutvision:DescribeProject'
              - 'lookoutvision:ListProjects'
              - 'macie2:GetMacieSession'
              - 'managedblockchain:Get*'
              - 'managedblockchain:List*'
              - 'mediapackage-vod:DescribePackagingGroup'
              - 'mediapackage-vod:List*'
              - 'mobiletargeting:Get*'
              - 'mobiletargeting:ListTemplates'
              - 'mq:DescribeBroker'
              - 'mq:ListBrokers'
              - 'network-firewall:DescribeLoggingConfiguration'
              - 'network-firewall:ListFirewalls'
              - 'nimble:Get'
              - 'nimble:List*'
              - 'opsworks:Describe*'
              - 'opsworks:ListTags'
              - 'organizations:Describe*'
              - 'organizations:List*'
              - 'panorama:Describe*'
              - 'panorama:List*'
              - 'profile:Get*'
              - 'profile:List*'
              - 'quicksight:Describe*'
              - 'quicksight:List*'
              - 'ram:Get*'
              - 'ram:ListResourceSharePermissions'
              - 'rds:Describe*'
              - 'rds:ListTagsForResource'
              - 'redshift:Describe*'
              - 'rekognition:DescribeStreamProcessor'
              - 'rekognition:List*'
              - 'resiliencehub:Describe*'
              - 'resiliencehub:List*'
              - 'resource-groups:Get*'
              - 'resource-groups:List*'
              - 'robomaker:Describe*'
              - 'robomaker:List*'
              - 'route53:Get*'
              - 'route53:List*'
              - 'route53resolver:Get*'
              - 'route53resolver:List*'
              - 'rum:Get*'
              - 'rum:List*'
              - 's3-outposts:Get*'
              - 's3-outposts:List*'
              - 's3:Get*'
              - 's3:List*'
              - 'sagemaker:Describe*'
              - 'sagemaker:List*'
              - 'schemas:Describe*'
              - 'schemas:GetResourcePolicy'
              - 'schemas:List*'
              - 'sdb:GetAttributes'
              - 'sdb:ListDomains'
              - 'secretsmanager:List*'
              - 'securityhub:DescribeHub'
              - 'servicediscovery:Get*'
              - 'servicediscovery:List*'
              - 'ses:Describe*'
              - 'ses:Get*'
              - 'ses:List*'
              - 'shield:Describe*'
              - 'signer:GetSigningProfile'
              - 'signer:List*'
              - 'sns:Get*'
              - 'sns:List*'
              - 'sqs:GetQueueAttributes'
              - 'sqs:List*'
              - 'ssm:Describe*'
              - 'ssm:Get*'
              - 'ssm:ListDocuments'
              - 'sso:Describe*'
              - 'sso:GetInlinePolicyForPermissionSet'
              - 'sso:List*'
              - 'states:Describe*'
              - 'states:List*'
              - 'storagegateway:List*'
              - 'sts:GetCallerIdentity'
              - 'support:DescribeCases'
              - 'synthetics:Describe*'
              - 'synthetics:Get*'
              - 'synthetics:List*'
              - 'tag:GetResources'
              - 'timestream:Describe*'
              - 'timestream:List*'
              - 'transfer:Describe*'
              - 'transfer:List*'
              - 'voiceid:DescribeDomain'
              - 'voiceid:ListTagsForResource'
              - 'waf-regional:Get*'
              - 'waf:Get*'
              - 'wafv2:Get*'
              - 'wafv2:List*'
              - 'workspaces:Describe*'
            Resource: '*'
      Roles:
        - !Ref ConfigRole

Outputs:
  RoleArn:
    Value: !GetAtt ConfigRole.Arn
    Export:
      Name: !Join [ "-", [ !Ref "AWS::AccountId", ConfigRoleArn ] ]
  
  RoleName:
    Value: !Ref ConfigRole
    Export:
      Name: !Join [ "-", [ !Ref "AWS::AccountId", ConfigRoleName ] ]


